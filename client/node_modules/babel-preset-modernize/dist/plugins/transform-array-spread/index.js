"use strict";exports.__esModule=true;exports.default=void 0;var _default=({types:t})=>({name:"transform-array-spread",visitor:{CallExpression(path){const callee=path.get("callee");if(t.isMemberExpression(callee)&&t.isIdentifier(callee.node.property,t.identifier("concat"))){const arr=callee.get("object");const args=path.get("arguments");if(t.isArrayExpression(arr)){const items=[];const success=args.every(p=>{if(t.isArrayExpression(p)){items.push(...p.node.elements);return true}if(p.isLiteral()||t.isObjectExpression(p)){items.push(p.node);return true}if(t.isObjectExpression(p)){items.push(p.node);return true}if(!t.isIdentifier(p)){return}const binding=path.scope.getBinding(p.node.name);if(!binding||!binding.constant)return;if(binding.kind==="param"&&t.isRestElement(binding.path)){items.push(t.spreadElement(p.node));return true}});if(!success)return;const spread=t.isArrayExpression(arr)?t.clone(arr.node):t.arrayExpression([arr.node]);spread.elements.push(...items);path.replaceWith(spread);path.skip()}}}}});exports.default=_default;module.exports=exports.default;