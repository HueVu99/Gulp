"use strict";exports.__esModule=true;exports.default=void 0;var _default=({types:t})=>({name:"transform-iife-arrows",visitor:{"FunctionExpression|FunctionDeclaration"(path){let parent=path.parentPath;if(t.isExpressionStatement(parent))parent=parent.parentPath;if(!t.isCallExpression(parent)){const idents=path.getOuterBindingIdentifierPaths();for(let ident in idents){const binding=path.scope.getBinding(ident);if(!binding.constant||binding.references!==1)return;parent=binding.referencePaths[0].parentPath}}if(!t.isCallExpression(parent)){return}let deopt=false;path.traverse({BlockStatement(p){if(t.isFunction(p.parent)&&p.parentPath!==path){p.stop()}},ThisExpression(p){deopt=true;p.stop()},Identifier(p){if(p.node.name==="arguments"){deopt=true;p.stop()}}});if(deopt)return;const node=t.clone(path.node);node.type="ArrowFunctionExpression";if(node.body.body.length===1&&t.isReturnStatement(node.body.body[0])){node.body=node.body.body[0].argument}if(t.isFunctionDeclaration(path)){path.replaceWith(t.variableDeclaration("var",[t.variableDeclarator(t.clone(path.node.id),node)]))}else{path.replaceWith(node)}}}});exports.default=_default;module.exports=exports.default;